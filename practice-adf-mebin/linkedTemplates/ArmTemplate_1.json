{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "practice-adf-mebin"
		},
		"HDInsight_LinkedService_clusterPassword": {
			"type": "secureString",
			"metadata": "Secure string for 'clusterPassword' of 'HDInsight_LinkedService'"
		},
		"HDInsight_LinkedService_clusterSshPassword": {
			"type": "secureString",
			"metadata": "Secure string for 'clusterSshPassword' of 'HDInsight_LinkedService'"
		},
		"HDInsight_LinkedService_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'HDInsight_LinkedService'"
		},
		"HDInsight_LinkedService_properties_typeProperties_hostSubscriptionId": {
			"type": "string",
			"defaultValue": "c6ae8b83-57c0-4404-ab5d-498d536e1a58"
		},
		"HDInsight_LinkedService_properties_typeProperties_clusterResourceGroup": {
			"type": "string",
			"defaultValue": "COVID19-adf-rg"
		},
		"HDInsight_LinkedService_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "75e1b099-f930-4cad-9597-ddc73bc62b7b"
		},
		"HDInsight_LinkedService_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "f0b06929-60fa-48c0-a83d-96566b55f5f4"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ECDC_Hospital_Admission')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "StorageAccount_Data",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "hospital_admissions.csv",
						"folderPath": "ECDC",
						"container": "information"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "indicator",
						"type": "String"
					},
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "year_week",
						"type": "String"
					},
					{
						"name": "value",
						"type": "String"
					},
					{
						"name": "source",
						"type": "String"
					},
					{
						"name": "url",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HospitalAdmissionSink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "StorageAccount_Data",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"sinkFileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat(dataset().sinkFileName, '.csv')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('Hospital_Admission/', dataset().sinkFileName)",
							"type": "Expression"
						},
						"container": "information"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Belgium",
						"type": "String"
					},
					{
						"name": "BE",
						"type": "String"
					},
					{
						"name": "BEL",
						"type": "String"
					},
					{
						"name": "11455519",
						"type": "String"
					},
					{
						"name": "2020-W43",
						"type": "String"
					},
					{
						"name": "TESSy COVID-19, national weekly data",
						"type": "String"
					},
					{
						"name": "28",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Hospital_AdmissionFolder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "StorageAccount_Data",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": "Hospital_Admission",
						"container": "information"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/InformationContainer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "StorageAccount_Data",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"container": "information"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Information_population')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "StorageAccount_Data",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "population_by_age.tsv",
						"folderPath": "population",
						"container": "information"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Temp_ECDC_Folder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "StorageAccount_Data",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp_ECDC",
						"container": "information"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/fileNames_urls_list')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "StorageAccount_Data",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "adf_Data.txt",
						"container": "data"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"sourceRelativeURL": {
							"type": "string"
						},
						"sinkFileName": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HDInsight_LinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HDInsightOnDemand",
				"typeProperties": {
					"clusterType": "hadoop",
					"clusterSize": 4,
					"timeToLive": "00:15:00",
					"version": "4.0",
					"hostSubscriptionId": "[parameters('HDInsight_LinkedService_properties_typeProperties_hostSubscriptionId')]",
					"clusterResourceGroup": "[parameters('HDInsight_LinkedService_properties_typeProperties_clusterResourceGroup')]",
					"servicePrincipalId": "[parameters('HDInsight_LinkedService_properties_typeProperties_servicePrincipalId')]",
					"tenant": "[parameters('HDInsight_LinkedService_properties_typeProperties_tenant')]",
					"clusterNamePrefix": "",
					"clusterPassword": {
						"type": "SecureString",
						"value": "[parameters('HDInsight_LinkedService_clusterPassword')]"
					},
					"clusterSshPassword": {
						"type": "SecureString",
						"value": "[parameters('HDInsight_LinkedService_clusterSshPassword')]"
					},
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('HDInsight_LinkedService_servicePrincipalKey')]"
					},
					"linkedServiceName": {
						"referenceName": "StorageAccount_EastUS",
						"type": "LinkedServiceReference"
					},
					"headNodeSize": "",
					"dataNodeSize": "",
					"zookeeperNodeSize": ""
				},
				"connectVia": {
					"referenceName": "IntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Destroy_COVID19_Project')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Delete_Content_In_Information_Container",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "InformationContainer",
								"type": "DatasetReference",
								"parameters": {
									"fileName": "*"
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "*",
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-11-06T18:05:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/InformationContainer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pull_Data_From_Blob_Storage')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Zip_file_meta_data",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Data_population",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"columnCount",
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "validate meta deta",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Zip_file_meta_data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Zip_file_meta_data').output.columnCount,13)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Fail activity",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Wrong meta deta",
										"errorCode": "500"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Extract zip file",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "indic_de,geo\\time",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "indic_de,geo\\time",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "2008 ",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "2008 ",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "2009 ",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "2009 ",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "2010 ",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "2010 ",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "2011 ",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "2011 ",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "2012 ",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "2012 ",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "2013 ",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "2013 ",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "2014 ",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "2014 ",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "2015 ",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "2015 ",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "2016 ",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "2016 ",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "2017 ",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "2017 ",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "2018 ",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "2018 ",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "2019 ",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "2019 ",
														"type": "String",
														"physicalType": "String"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Data_population",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "Information_population",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Ingestion"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-04T14:15:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Information_population')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pull_Data_From_HTTP_Service')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_filename_url_list",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "fileNames_urls_list",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "iterate_over_filename_url_list",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_filename_url_list",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_filename_url_list').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "GetDataFromHTTPService",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "HTTP_DataSource",
											"type": "DatasetReference",
											"parameters": {
												"relativeURL": {
													"value": "@item().sourceRelativeURL",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ECDC_Cases_Death",
											"type": "DatasetReference",
											"parameters": {
												"fileName": {
													"value": "@item().sinkFileName",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Transformation",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "GetDataFromHTTPService",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/painadathmebin@gmail.com/COVID19-adf/databrick/CleanData",
										"baseParameters": {
											"fileName": {
												"value": "@item().sinkFileName",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Copy data from Temp ECDC to ECDC",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Transformation",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": {
													"value": "@concat('Temp_ECDC/', item().sinkFileName)",
													"type": "Expression"
												},
												"wildcardFileName": "*.csv",
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Temp_ECDC_Folder",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ECDC_Cases_Death",
											"type": "DatasetReference",
											"parameters": {
												"fileName": {
													"value": "@item().sinkFileName",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Delete_TempECDC_Folders",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Copy data from Temp ECDC to ECDC",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DeleteTemp_ECDCFolder",
											"type": "DatasetReference",
											"parameters": {
												"deleteFolderName": {
													"value": "@item().sinkFileName",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "*",
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "Delete_TempECDC_Folder",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "iterate_over_filename_url_list",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DeleteTemp_ECDCFiles",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "*",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Delete_TempECDC_File",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "iterate_over_filename_url_list",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "InformationContainer",
								"type": "DatasetReference",
								"parameters": {
									"fileName": "Temp_ECDC"
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Ingestion"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-06T17:38:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/fileNames_urls_list')]",
				"[concat(variables('factoryId'), '/datasets/InformationContainer')]",
				"[concat(variables('factoryId'), '/datasets/Temp_ECDC_Folder')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Transformation_Pipeline_Code')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Process Testing Data",
						"type": "HDInsightHive",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"scriptPath": "scripts/covid_transform_testing.hql",
							"scriptLinkedService": {
								"referenceName": "StorageAccount_EastUS",
								"type": "LinkedServiceReference"
							}
						},
						"linkedServiceName": {
							"referenceName": "HDInsight_LinkedService",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Population_Transformation",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/painadathmebin@gmail.com/COVID19-Azure_Data_Factory/databrick/CleanData"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Transformation"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HDInsight_LinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Filter_CaseDeath_File')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ECDC_Cases_Death",
								"type": "DatasetReference"
							},
							"name": "CaseAndDeathSource"
						},
						{
							"dataset": {
								"referenceName": "Country_Lookup",
								"type": "DatasetReference"
							},
							"name": "CountryLookup"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "CaseAndDeathSink",
								"type": "DatasetReference"
							},
							"name": "CasesAndDeathsSink"
						}
					],
					"transformations": [
						{
							"name": "FilterEuropeOnly"
						},
						{
							"name": "SelectRequiredColumns"
						},
						{
							"name": "PivotCounts"
						},
						{
							"name": "LookupCountry"
						},
						{
							"name": "SelectForSink"
						}
					],
					"scriptLines": [
						"source(output(",
						"          country as string,",
						"          country_code as string,",
						"          continent as string,",
						"          population as integer,",
						"          indicator as string,",
						"          daily_count as short,",
						"          date as date,",
						"          rate_14_day as double,",
						"          source as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: true,",
						"     ignoreNoFilesFound: false) ~> CaseAndDeathSource",
						"source(output(",
						"          country as string,",
						"          country_code_2_digit as string,",
						"          country_code_3_digit as string,",
						"          continent as string,",
						"          population as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> CountryLookup",
						"CaseAndDeathSource filter(continent == 'Europe' && not(isNull(country_code))) ~> FilterEuropeOnly",
						"FilterEuropeOnly select(mapColumn(",
						"          country,",
						"          country_code,",
						"          population,",
						"          indicator,",
						"          daily_count,",
						"          source,",
						"          each(match(name=='date'),",
						"               'report'+'_date' = $$)",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectRequiredColumns",
						"SelectRequiredColumns pivot(groupBy(country,",
						"          country_code,",
						"          population,",
						"          source,",
						"          report_date),",
						"     pivotBy(indicator, ['confirmed cases', 'deaths']),",
						"     count = sum(daily_count),",
						"     columnNaming: '$V_$N',",
						"     lateral: true) ~> PivotCounts",
						"PivotCounts, CountryLookup lookup(PivotCounts@country == CountryLookup@country,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> LookupCountry",
						"LookupCountry select(mapColumn(",
						"          country = PivotCounts@country,",
						"          country_code_2_digit,",
						"          country_code_3_digit,",
						"          population = PivotCounts@population,",
						"          source,",
						"          report_date,",
						"          cases_count = {confirmed cases_count},",
						"          deaths_count",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectForSink",
						"SelectForSink sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     truncate: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> CasesAndDeathsSink"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Hospital_Admission_Filter')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ECDC_Hospital_Admission",
								"type": "DatasetReference"
							},
							"name": "HospitalAdmissionsStream"
						},
						{
							"dataset": {
								"referenceName": "Country_Lookup",
								"type": "DatasetReference"
							},
							"name": "CountryCodeStream"
						},
						{
							"dataset": {
								"referenceName": "DimDate",
								"type": "DatasetReference"
							},
							"name": "DimDateSource"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "StorageAccount_Data",
								"type": "LinkedServiceReference"
							},
							"name": "WeeklySinkStream"
						},
						{
							"linkedService": {
								"referenceName": "StorageAccount_Data",
								"type": "LinkedServiceReference"
							},
							"name": "DailySinkStream"
						}
					],
					"transformations": [
						{
							"name": "FilterOutNullValues"
						},
						{
							"name": "CountryCodeLookUp"
						},
						{
							"name": "SelectRequiredColumns"
						},
						{
							"name": "SplitDailyFromWeekly"
						},
						{
							"name": "AggDimDate"
						},
						{
							"name": "JoinWithDate"
						},
						{
							"name": "PivotWeekly"
						},
						{
							"name": "PivotDaily"
						},
						{
							"name": "SortWeekly"
						},
						{
							"name": "SortDaily"
						},
						{
							"name": "SelectWeekly"
						},
						{
							"name": "SelectDaily"
						}
					],
					"scriptLines": [
						"source(output(",
						"          country as string,",
						"          indicator as string,",
						"          date as date,",
						"          year_week as string,",
						"          value as short,",
						"          source as string,",
						"          url as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> HospitalAdmissionsStream",
						"source(output(",
						"          country as string,",
						"          country_code_2_digit as string,",
						"          country_code_3_digit as string,",
						"          continent as string,",
						"          population as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> CountryCodeStream",
						"source(output(",
						"          date_key as string,",
						"          date as string,",
						"          year as string,",
						"          month as string,",
						"          day as string,",
						"          day_name as string,",
						"          day_of_year as string,",
						"          week_of_month as string,",
						"          week_of_year as string,",
						"          month_name as string,",
						"          year_month as string,",
						"          year_week as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> DimDateSource",
						"HospitalAdmissionsStream filter(country != \"\\\"\") ~> FilterOutNullValues",
						"FilterOutNullValues, CountryCodeStream lookup(HospitalAdmissionsStream@country == CountryCodeStream@country,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> CountryCodeLookUp",
						"CountryCodeLookUp select(mapColumn(",
						"          country = HospitalAdmissionsStream@country,",
						"          indicator,",
						"          reported_date = date,",
						"          reported_year_week = year_week,",
						"          value,",
						"          source,",
						"          country = CountryCodeStream@country,",
						"          country_code_2_digit,",
						"          country_code_3_digit,",
						"          population",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectRequiredColumns",
						"SelectRequiredColumns split(indicator == \"Weekly new hospital admissions per 100k\" || indicator == \"Weekly new ICU admissions per 100k\",",
						"     disjoint: false) ~> SplitDailyFromWeekly@(Weekly, Daily)",
						"DimDateSource aggregate(groupBy(ecdc_year_week = year+\"-W\"+lpad(week_of_year,2,\"0\")),",
						"     week_start_date = min(date),",
						"          week_end_date = max(date)) ~> AggDimDate",
						"SplitDailyFromWeekly@Weekly, AggDimDate join(reported_year_week == ecdc_year_week,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> JoinWithDate",
						"JoinWithDate pivot(groupBy(country,",
						"          country_code_2_digit,",
						"          country_code_3_digit,",
						"          population,",
						"          reported_year_week,",
						"          source,",
						"          week_start_date,",
						"          week_end_date),",
						"     pivotBy(indicator, ['Weekly new hospital admissions per 100k', 'Weekly new ICU admissions per 100k']),",
						"     count = sum(value),",
						"     columnNaming: '$V_$N',",
						"     lateral: true) ~> PivotWeekly",
						"SplitDailyFromWeekly@Daily pivot(groupBy(country,",
						"          country_code_2_digit,",
						"          country_code_3_digit,",
						"          reported_date,",
						"          source,",
						"          population),",
						"     pivotBy(indicator, ['Daily hospital occupancy', 'Daily ICU occupancy']),",
						"     count = sum(value),",
						"     columnNaming: '$V_$N',",
						"     lateral: true) ~> PivotDaily",
						"PivotWeekly sort(desc(reported_year_week, true),",
						"     asc(country, true)) ~> SortWeekly",
						"PivotDaily sort(desc(reported_date, true),",
						"     asc(country, true)) ~> SortDaily",
						"SortWeekly select(mapColumn(",
						"          country,",
						"          country_code_2_digit,",
						"          country_code_3_digit,",
						"          population,",
						"          reported_year_week,",
						"          reported_week_start_date = week_start_date,",
						"          reported_week_end_date = week_end_date,",
						"          new_hospital_occupancy_count = {Weekly new hospital admissions per 100k_count},",
						"          new_icu_occupancy_count = {Weekly new ICU admissions per 100k_count},",
						"          source",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectWeekly",
						"SortDaily select(mapColumn(",
						"          country,",
						"          country_code_2_digit,",
						"          country_code_3_digit,",
						"          reported_date,",
						"          population,",
						"          new_hospital_occupancy_count = {Daily hospital occupancy_count},",
						"          new_icu_occupancy_count = {Daily ICU occupancy_count},",
						"          source",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectDaily",
						"SelectWeekly sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delimited',",
						"     container: 'information',",
						"     folderPath: 'Hospital_Admission/Temp_Weekly',",
						"     truncate: true,",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> WeeklySinkStream",
						"SelectDaily sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delimited',",
						"     container: 'information',",
						"     folderPath: 'Hospital_Admission/Temp_Daily',",
						"     truncate: true,",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> DailySinkStream"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ECDC_Hospital_Admission')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CasesAndDeaths_DataFlow_Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CasesAndDeathsDataFlow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Filter_CaseDeath_File",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"CaseAndDeathSource": {
										"fileName": "cases_deaths.csv"
									},
									"CountryLookup": {},
									"CasesAndDeathsSink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Copy data from process folder to Cases_Deaths",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CasesAndDeathsDataFlow",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "Temp_Cases_Deaths",
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CaseAndDeathSink",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CasesAndDeathsFolder",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete Temp_Cases_Deaths File",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy data from process folder to Cases_Deaths",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "InformationContainer",
								"type": "DatasetReference",
								"parameters": {
									"fileName": "Temp_Cases_Deaths"
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Delete Temp_Cases_Deaths Folder",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy data from process folder to Cases_Deaths",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "CaseAndDeathSink",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "*",
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Transformation"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Filter_CaseDeath_File')]",
				"[concat(variables('factoryId'), '/datasets/InformationContainer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Create_Weekly_Daily_Hospital_Admissions')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Hospital Admission Weekly And Daily",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Hospital_Admission_Filter",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"HospitalAdmissionsStream": {},
									"CountryCodeStream": {},
									"DimDateSource": {},
									"WeeklySinkStream": {},
									"DailySinkStream": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "None",
							"cacheSinks": {
								"firstRowOnly": true
							}
						}
					},
					{
						"name": "Merge all the partitions of daily data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Hospital Admission Weekly And Daily",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "Hospital_Admission/Temp_Daily",
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "All_CSVFiles_HospitalAdmission_Folder",
								"type": "DatasetReference",
								"parameters": {
									"folderName": "Temp_Daily"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "HospitalAdmissionSink",
								"type": "DatasetReference",
								"parameters": {
									"sinkFileName": "Daily"
								}
							}
						]
					},
					{
						"name": "Merge all the partitions of weekly data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Hospital Admission Weekly And Daily",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "Hospital_Admission/Temp_Weekly",
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "All_CSVFiles_HospitalAdmission_Folder",
								"type": "DatasetReference",
								"parameters": {
									"folderName": "Temp_Weekly"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "HospitalAdmissionSink",
								"type": "DatasetReference",
								"parameters": {
									"sinkFileName": "Weekly"
								}
							}
						]
					},
					{
						"name": "DeleteTempWeekly",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Merge all the partitions of weekly data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "All_CSVFiles_HospitalAdmission_Folder",
								"type": "DatasetReference",
								"parameters": {
									"folderName": "Temp_Weekly"
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "*",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "DeleteTempDaily",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Merge all the partitions of daily data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "All_CSVFiles_HospitalAdmission_Folder",
								"type": "DatasetReference",
								"parameters": {
									"folderName": "Temp_Daily"
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "*",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "DeleteTempDailyFile",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "DeleteTempDaily",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Hospital_AdmissionFolder",
								"type": "DatasetReference",
								"parameters": {
									"fileName": "Temp_Daily"
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "DeleteHospital_AdmissionFile",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "DeleteTempDailyFile",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "DeleteTempWeeklyFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "InformationContainer",
								"type": "DatasetReference",
								"parameters": {
									"fileName": "Hospital_Admission"
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "DeleteTempWeeklyFile",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "DeleteTempWeekly",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Hospital_AdmissionFolder",
								"type": "DatasetReference",
								"parameters": {
									"fileName": "Temp_Weekly"
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Transformation"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Hospital_Admission_Filter')]",
				"[concat(variables('factoryId'), '/datasets/HospitalAdmissionSink')]",
				"[concat(variables('factoryId'), '/datasets/Hospital_AdmissionFolder')]",
				"[concat(variables('factoryId'), '/datasets/InformationContainer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tgr_pull_data_from_http')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Pull_Data_From_HTTP_Service",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-11-06T22:41:00",
						"endTime": "2023-11-07T02:04:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Pull_Data_From_HTTP_Service')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Setup_COVID19_Project')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CasesAndDeathsPipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "BlobStorage_Data_Injector",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "HTTP_Data_Injector",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CasesAndDeaths_DataFlow_Pipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {}
						}
					},
					{
						"name": "BlobStorage_Data_Injector",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Pull_Data_From_Blob_Storage",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "HTTP_Data_Injector",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Pull_Data_From_HTTP_Service",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "HospitalAdmissionPipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "BlobStorage_Data_Injector",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "HTTP_Data_Injector",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Create_Weekly_Daily_Hospital_Admissions",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-11-07T14:24:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/CasesAndDeaths_DataFlow_Pipeline')]",
				"[concat(variables('factoryId'), '/pipelines/Pull_Data_From_Blob_Storage')]",
				"[concat(variables('factoryId'), '/pipelines/Pull_Data_From_HTTP_Service')]",
				"[concat(variables('factoryId'), '/pipelines/Create_Weekly_Daily_Hospital_Admissions')]"
			]
		}
	]
}