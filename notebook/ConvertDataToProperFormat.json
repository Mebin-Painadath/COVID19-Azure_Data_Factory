{
	"name": "ConvertDataToProperFormat",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "sparkPool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "be7b1b0d-68e3-4f9d-8e87-d20e13058118"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/c6ae8b83-57c0-4404-ab5d-498d536e1a58/resourceGroups/covid19-asw/providers/Microsoft.Synapse/workspaces/covid19-asw/bigDataPools/sparkPool",
				"name": "sparkPool",
				"type": "Spark",
				"endpoint": "https://covid19-asw.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/sparkPool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.4",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"df = spark.read.csv(\"abfss://information@covid19mebinsa.dfs.core.windows.net/ECDC/hospital_admissions.csv\", header=True)\r\n",
					"df.show()"
				],
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pyspark.sql.functions import when, col\r\n",
					"df = df.filter(df.indicator.isNotNull())\r\n",
					"for i in df.columns\r\n",
					"    df = df.withColumn(i, when(col(i) == \"\\\"\", \"\").otherwise(col(i)))\r\n",
					"df.show()"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df.write.csv(\"abfss://information@covid19mebinsa.dfs.core.windows.net/ECDC/hospital_admissions.csv\", mode=\"overwrite\")"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					""
				],
				"execution_count": null
			}
		]
	}
}